üíª Dise√±o de Aplicaciones Web y Mobile 2025

Trabajo Pr√°ctico: primer y segundo final 27 de octubre del 2025  Profesor: Mag. Ivan Ismael R√≠os Villalba 



Este trabajo involucra desarrollar una aplicaci√≥n Flutter que muestre una lista de Pok√©mon obtenidos desde la PokeAPI, con capacidad de desplazamiento (scroll), b√∫squeda y visualizaci√≥n de detalles.

Revisiones y entrega 


El d√≠a del Primer Examen Final: Lunes 24/11/25 19:30 hs. 


O el d√≠a del Segundo Examen Final: Mi√©rcoles 17/12/25 19:30 hs. 

Observaciones 


Tecnolog√≠a: Flutter.

Para la implementaci√≥n puede utilizar el IDE de su elecci√≥n (Visual Studio Code, Android Studio, etc.).

Enunciado 

Trabajo Pr√°ctico: "Mi Pok√©dex Interactiva" 

Objetivo 

Desarrollar una aplicaci√≥n Flutter que muestre una lista de Pok√©mon obtenidos desde la PokeAPI, con capacidad de desplazamiento (scroll), b√∫squeda y visualizaci√≥n de detalles.

Requisitos funcionales 

1. Pantalla principal 

Mostrar una lista de Pok√©mon con su n√∫mero, nombre y sprite (imagen).

Permitir desplazarse (scroll) por todos los Pok√©mon disponibles (hasta 1500).

Mostrar un indicador de carga (CircularProgress Indicator) mientras se obtienen m√°s Pok√©mon.

2. B√∫squeda 

Incluir una barra de b√∫squeda en la parte superior para filtrar Pok√©mon por nombre (ej: "pikachu").

Si no hay coincidencias, mostrar un mensaje "No se encontraron resultados".

3. Pantalla de detalle 

Al tocar un Pok√©mon, mostrar una nueva pantalla con:

Imagen grande 

Nombre y n√∫mero 

Tipo(s) 

Altura y peso 

Los datos se obtienen de la ruta individual de cada Pok√©mon (https://pokeapi.co/api/v2/pokemon/{id}).

4. Dise√±o 

Usar ListView o GridView con scroll.

Utilizar colores de fondo suaves y tarjetas (Card) para cada Pok√©mon.

Implementar √≠conos o tipograf√≠a agradable (por ejemplo, GoogleFonts.pressStart2P).

Desaf√≠os opcionales (bonus) 

Implementar un modo oscuro / claro.

Guardar Pok√©mon "favoritos" con SharedPreferences.

Usar GridView.builder para mostrar los Pok√©mon en formato de cuadr√≠cula.

Animar la transici√≥n entre pantallas con Hero.

Aprendizajes esperados 

Uso de APIs REST con http.

Control del estado y del scroll.

Construcci√≥n de interfaces reactivas y adaptativas.

Buenas pr√°cticas de estructuraci√≥n del c√≥digo Flutter.

Entrega 


C√≥digo fuente en un repositorio de GitHub o archivo .zip.

Un breve documento o README que describa:

Qu√© funcionalidades implementaron.

Qu√© desaf√≠os encontraron.

Qu√© aprendieron del proyecto.